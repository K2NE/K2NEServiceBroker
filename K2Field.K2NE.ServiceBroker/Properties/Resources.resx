<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CaughtExceptionAtRunUMGetUsers" xml:space="preserve">
    <value>Caught exception at RunUMGetUsers({0},{1})</value>
  </data>
  <data name="ConfigOptionNotFound" xml:space="preserve">
    <value>The Service Instance Configuration option '{0}' could not be found. Please specify it.</value>
  </data>
  <data name="DateNotValid" xml:space="preserve">
    <value>Time Zone does not exist. Name: The string could not be parsed into a valid date and time.</value>
  </data>
  <data name="ErrorCreatingExcelFile" xml:space="preserve">
    <value>Error creating excel file.</value>
  </data>
  <data name="ErrorRequiredEmpty" xml:space="preserve">
    <value>Required field is empty</value>
  </data>
  <data name="FailedToFindTheAction" xml:space="preserve">
    <value>Failed to find the action specified. Worklist item was found.</value>
  </data>
  <data name="FailedToQuery" xml:space="preserve">
    <value>Failed to query {0}</value>
  </data>
  <data name="FailedToRetrieveProcesses" xml:space="preserve">
    <value>Failed to retrieve processes for ProcessInstanceClient Service Object.</value>
  </data>
  <data name="FailedToRetrievePropertyResultPropertyCollection" xml:space="preserve">
    <value>Failed to retrieve property '{0}' from ResultPropertyCollection.</value>
  </data>
  <data name="FailedToRetrievePSFiles" xml:space="preserve">
    <value>Failed to retrieve PowerShell files.</value>
  </data>
  <data name="FailedToSetOOF" xml:space="preserve">
    <value>Failed to get/set the OOF status for the given user.</value>
  </data>
  <data name="FileNameIsRequired" xml:space="preserve">
    <value>FileName is required.</value>
  </data>
  <data name="GMTOffSetValidationFailed" xml:space="preserve">
    <value>GMTOffset must be between -13 and 13</value>
  </data>
  <data name="IdentityTypeRoleIsNotSupported" xml:space="preserve">
    <value>Identity type role is not supported for this filtering.</value>
  </data>
  <data name="IsNotValidSO" xml:space="preserve">
    <value>{0} is not a valid service object in the ServiceObjectType collection.</value>
  </data>
  <data name="MoreThanOneWorklistItemFound" xml:space="preserve">
    <value>More than one worklist item found with those criteria.</value>
  </data>
  <data name="MultipleOOFConfigurations" xml:space="preserve">
    <value>Multiple OOF scenarios detected for this user which is supported by this method.</value>
  </data>
  <data name="NotCreatingSOForPSScript" xml:space="preserve">
    <value>Not creating service object for PowerShell script '{0}'. This is a system service object already.</value>
  </data>
  <data name="NotCreatingSOMethodForPSFunction" xml:space="preserve">
    <value>Not creating Service Object Method for PowerShell function '{0}' in script '{1}'. This is a system method.</value>
  </data>
  <data name="NotParseToByte" xml:space="preserve">
    <value>{0} could not be parsed to a Byte.</value>
  </data>
  <data name="NotParseToGuid" xml:space="preserve">
    <value>{0} could not be parsed to a Guid.</value>
  </data>
  <data name="NotParseToInteger" xml:space="preserve">
    <value>{0} could not be parsed to a Integer</value>
  </data>
  <data name="NotRetrieveProcess" xml:space="preserve">
    <value>Could not retrieve process (with id: {0}). Got {1} results.</value>
  </data>
  <data name="NoWorklistItemFound" xml:space="preserve">
    <value>No worklist item found with those criteria.</value>
  </data>
  <data name="OutOfOfficeNotConfiguredForUser" xml:space="preserve">
    <value>User does not have out of office configured.  Please configure the users out of office settings.</value>
  </data>
  <data name="ProcessInstanceNotFound" xml:space="preserve">
    <value>Sorry, process instance with id {0} not found.</value>
  </data>
  <data name="ProfileNotFound" xml:space="preserve">
    <value>Profile with name "{0}" was not found.</value>
  </data>
  <data name="RequiredParameterIsEmpty" xml:space="preserve">
    <value>{0} is required but is empty.</value>
  </data>
  <data name="RequiredParameterNotFound" xml:space="preserve">
    <value>{0} is a required parameter, but does not exist.</value>
  </data>
  <data name="RequiredPropertyIsEmpty" xml:space="preserve">
    <value>{0} is required but is empty.</value>
  </data>
  <data name="RequiredPropertyNotFound" xml:space="preserve">
    <value>{0} is a required property, but does not exist.</value>
  </data>
  <data name="RoleNotExists" xml:space="preserve">
    <value>The given role does not exist.</value>
  </data>
  <data name="RoleTypeNotSupported" xml:space="preserve">
    <value>Role Type is not supported. Only User and group allowed.</value>
  </data>
  <data name="SOIsNotSet" xml:space="preserve">
    <value>ServiceObject is not set.</value>
  </data>
  <data name="SpecialCharactersAreNotAllowed" xml:space="preserve">
    <value>Special characters are not allowed.</value>
  </data>
  <data name="WorkingHoursNotSet" xml:space="preserve">
    <value>No working hours have been set. Please set the working hours using the K2 Workspace.</value>
  </data>
  <data name="ZoneDoesNotExist" xml:space="preserve">
    <value>Time Zone does not exist. Name:</value>
  </data>
  <data name="ZoneExists" xml:space="preserve">
    <value>Time Zone already exists. Name:</value>
  </data>
  <data name="WorksheetNotExist" xml:space="preserve">
    <value>This Worksheet doesn't exist.</value>
  </data>
</root>